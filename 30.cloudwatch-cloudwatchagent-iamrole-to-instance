Aws Cloudwatch:
		In AWS each service is monitored by cloudwatch for example cpu and memory of an ec2 instance.
üëâÔ∏èGenerally  we start at "Metrics" in cliudwatch to learn.
üëâÔ∏èWhat ever the service you have used in the aws those services Metrics are available under "Metric" section in cloudwath.
üëâÔ∏èBy default we can't monitor the "Memory" and "Disk space" of an ec2 instance with cloudwath.For that we need to install cloudwatch Agent and also we need to run perl scripts.now we can monitor the Memory and Diskspace.
  	
  	https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mon-scripts.html ===Monitor memory and disk metrics for Amazon EC2 Linux instances=====
  	https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Install-CloudWatch-Agent.html
  	https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-EC2-Instance.html ==Installing the CloudWatch agent==
  	https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create-cloudwatch-agent-configuration-file.html ====	Create the CloudWatch agent configuration file===
  	https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create-cloudwatch-agent-configuration-file-wizard.html ==Create the CloudWatch agent configuration file with the wizard ===

Requrements:
	1. Launch one ec2 instance.
	2. create an IAM Role with permissions i)CloudWatchFullAcces and CloudWatchAgentServerPolicy
						ii)CloudWatchLogsFullAccess
						iii)AmazonSSMFullAccess
						iv)AmazonSSMManagedInstanceCore	     
	   then attach this role to the ec2 instance to push metrics to the cloudWath.
	3. Create an SNS topic and subscription. when ever the cloudwatch alarm trigers the the SNS will send the notification to the members in the subscription.
	
step 1: Launch one ec2 instance
step 2: Goto IAM ->roles ->create role ->EC2 (this role is for ec2) ->permissions i)cloudwatch fullAccess	and ii)cloudwath Logs ->create role.
step3: Goto SNS ->create topic-> name:awsb24alarm ->create topic
       create subscription -> Protocal: Email -> End point: <enter the emails > ->createsubscription
     Add this subscription to the topic.
     
   when ever we congfigure the alarm  i.e,cpu >80 .the cpu usage of that instace is beyond 80% then it send a notificaiton to topic and to  subscription emails which we entered in the subscription mail.

step 4: Goto cloudwatch ->create alarm ->select metric->search for ec2 -> select instance ->Monitoring ->create alarm ->
       send a notification to : awsb24alarm  (topic name)
       Take the action: reboot the instance  (what ever the action you required)
       when ever max of cpu is >= 80 for atleast 1min ->create alarm.
       
       now you observe that in cloudwatch alarm state as "insuficient data",we need to wait some time then the state will become "ok"

now apply some stress load on the instance  to trigger the alarm

[root@ip-172-31-16-15 ~]# amazon-linux-extras install epel -y
[root@ip-172-31-16-15 ~]# sudo yum install stress -y
[root@ip-172-31-16-15 ~]# stress --cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 20m   (here we are givining timeout as 20 minitues)
then whenever the cpu reaches beyond the 80% automatically the cloudwatch alarm will trigger the topic and get notified to subscription.
===========
1.without installing cloudwatch agent on your ec2 instance you cant set the notification limits for MEMORY and DISK SPACE.
     i)download the cloudwacth aget
     ii)Create the CloudWatch agent configuration file with the wizard 
     iii)start the cloudwatch agent to push the metrics to clodwatch.
2. You must also make sure that the IAM role attached to the instance has the RequiredPolicys attached.
üëâÔ∏èCreate IAM roles to use with the CloudWatch agent on Amazon EC2 instances:https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create-iam-roles-for-cloudwatch-agent.html#create-iam-roles-for-cloudwatch-agent-roles

üëâÔ∏èInstalling the CloudWatch agent:https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-EC2-Instance.html
[root@ip-172-31-16-15 ~]# sudo yum install amazon-cloudwatch-agent -y     ===download the cloudwatch Agent===

üëâÔ∏èCreate the CloudWatch agent configuration file:https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create-cloudwatch-agent-configuration-file.html

üëâÔ∏èCreate the CloudWatch agent configuration file with the wizard: https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create-cloudwatch-agent-configuration-file-wizard.html

[root@ip-172-31-16-15 ~]# sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-config-wizard ====Create the CloudWatch agent configuration file with the wizard=
================================================================
= Welcome to the Amazon CloudWatch Agent Configuration Manager =
=                                                              =
= CloudWatch Agent allows you to collect metrics and logs from =
= your host and send them to CloudWatch. Additional CloudWatch =
= charges may apply.                                           =
================================================================
On which OS are you planning to use the agent?
1. linux
2. windows
3. darwin
default choice: [1]:
1
Trying to fetch the default region based on ec2 metadata...
Are you using EC2 or On-Premises hosts?
1. EC2
2. On-Premises
default choice: [1]:
1
Which user are you planning to run the agent?
1. root
2. cwagent
3. others
default choice: [1]:
1
Do you want to turn on StatsD daemon?
1. yes
2. no
default choice: [1]:
1
Which port do you want StatsD daemon to listen to?
default choice: [8125]
8125
What is the collect interval for StatsD daemon?
1. 10s
2. 30s
3. 60s
default choice: [1]:
1
What is the aggregation interval for metrics collected by StatsD daemon?
1. Do not aggregate
2. 10s
3. 30s
4. 60s
default choice: [4]:
4
Do you want to monitor metrics from CollectD? WARNING: CollectD must be installed or the Agent will fail to start
1. yes
2. no
default choice: [1]:
1
Do you want to monitor any host metrics? e.g. CPU, memory, etc.
1. yes
2. no
default choice: [1]:
1
Do you want to monitor cpu metrics per core?
1. yes
2. no
default choice: [1]:
1
Do you want to add ec2 dimensions (ImageId, InstanceId, InstanceType, AutoScalingGroupName) into all of your metrics if the info is available?
1. yes
2. no
default choice: [1]:
1
Do you want to aggregate ec2 dimensions (InstanceId)?
1. yes
2. no
default choice: [1]:
1
Would you like to collect your metrics at high resolution (sub-minute resolution)? This enables sub-minute resolution for all metrics, but you can customize for specific metrics in the output json file.
1. 1s
2. 10s
3. 30s
4. 60s
default choice: [4]:
4
Which default metrics config do you want?
1. Basic
2. Standard
3. Advanced
4. None
default choice: [1]:
1
Current config as follows:
{
	"agent": {
		"metrics_collection_interval": 60,
		"run_as_user": "root"
	},
	"metrics": {
		"aggregation_dimensions": [
			[
				"InstanceId"
			]
		],
		"append_dimensions": {
			"AutoScalingGroupName": "${aws:AutoScalingGroupName}",
			"ImageId": "${aws:ImageId}",
			"InstanceId": "${aws:InstanceId}",
			"InstanceType": "${aws:InstanceType}"
		},
		"metrics_collected": {
			"collectd": {
				"metrics_aggregation_interval": 60
			},
			"disk": {
				"measurement": [
					"used_percent"
				],
				"metrics_collection_interval": 60,
				"resources": [
					"*"
				]
			},
			"mem": {
				"measurement": [
					"mem_used_percent"
				],
				"metrics_collection_interval": 60
			},
			"statsd": {
				"metrics_aggregation_interval": 60,
				"metrics_collection_interval": 10,
				"service_address": ":8125"
			}
		}
	}
}
Are you satisfied with the above config? Note: it can be manually customized after the wizard completes to add additional items.
1. yes
2. no
default choice: [1]:
1
Do you have any existing CloudWatch Log Agent (http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html) configuration file to import for migration?
1. yes
2. no
default choice: [2]:
2
Do you want to monitor any log files?
1. yes
2. no
default choice: [1]:
1
Log file path:
/var/log
Log group name:
default choice: [log]
log
Log stream name:
default choice: [{instance_id}]
{instance_id}
Log Group Retention in days
1. -1
2. 1
3. 3
4. 5
5. 7
6. 14
7. 30
8. 60
9. 90
10. 120
11. 150
12. 180
13. 365
14. 400
15. 545
16. 731
17. 1827
18. 3653
default choice: [1]:
-1
The value -1 is not valid to this question.
Please retry to answer:
Log Group Retention in days
1. -1
2. 1
3. 3
4. 5
5. 7
6. 14
7. 30
8. 60
9. 90
10. 120
11. 150
12. 180
13. 365
14. 400
15. 545
16. 731
17. 1827
18. 3653
default choice: [1]:
1
Do you want to specify any additional log files to monitor?
1. yes
2. no
default choice: [1]:
1
Do you want to store the config in the SSM parameter store?
1. yes
2. no
default choice: [1]:
1
What parameter store name do you want to use to store your config? (Use 'AmazonCloudWatch-' prefix if you use our managed AWS policy)
default choice: [AmazonCloudWatch-linux]

Trying to fetch the default region based on ec2 metadata...
Which region do you want to store the config in the parameter store?
default choice: [us-east-1]

Which AWS credential should be used to send json config to parameter store?
1. ASIA3FYC6EOVD6MOGCXZ(From SDK)
2. Other
default choice: [1]:
1
Successfully put config to parameter store AmazonCloudWatch-linux.
Program exits now.

üëâÔ∏ènow we need to run/start the cloudwatch agent:https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-commandline-fleet.html

sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:configuration-file-path

üëâÔ∏è[root@ip-172-31-25-77 ~]# sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json    ====to start the cloudwatch agent===



[ec2-user@ip-172-31-25-77 ~]$ sudo su -
[root@ip-172-31-25-77 ~]# 
[root@ip-172-31-25-77 ~]# sudo yum install amazon-cloudwatch-agent  ===to download the cloudwacth aget===

[root@ip-172-31-25-77 ~]# sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-config-wizard  ====Create the CloudWatch agent configuration file with the wizard
[root@ip-172-31-25-77 ~]# sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json    ====to start the cloudwatch agent===

now goto cloudwatch ->metrics -> apart from AWS namespaces you observer new Custom namespaces -> under this you will find CWAgent->
 you will find the disk_used_percent and mem_used_percent options newly.
 
 there are total 4 stpes to create an alarm i)Specify metric and conditions
 					    ii)Configure actions
 					    iii)Add name and description
 					    iv)Preview and create
 Now Goto CloudWatch ->Alarms->create Alarm ->select metric ->under custom namespace select CWAgent ->select instance-id ->select metric ex:mem-used-percent-> conditions:
                         Threshold type:static
                         Whenever mem_used_percent is..: Greater  or Greater/Equal
                         than‚Ä¶: 50   what ever the %
                         click on next
	Configure actions:->Alarm state trigger: In alarm
			     Select an SNS topic:  select the SNS topic which you created earlier
			     EC2 action:->Alarm state trigger:In alarm
			                  Take the following action...: Reboot this instance
			                  click next
        Name and description:->Alarm name:mem-usage-alarm
                                         click on next
                                         ->create alarm
                                         
  whenever the memory usage of your instance is beyond the 50% the cloudwath will trigger the alarm then you get the notification through email and the instance will get reboot.
  

 


