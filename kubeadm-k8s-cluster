
setup one management server and enable the password less authentication between management server and (k8s master and worker)

in hosts file of the management enter the ip address of the both master and worker

first login to the management/bastian host from the management server login to the master/worker  and do the fallowing operations
root@ip-172-35-65-123: bastian/management server
root@ip-172-31-9-181:is master  
root@ip-172-32-89-54: is worker 
root@ip-172-35-65-123:~# ssh 172.31.9.181

===on master and worker========
ubuntu@ip-172-31-9-181:~$ sudo su -
root@ip-172-31-9-181:~# sudo apt update -y
root@ip-172-31-9-181:~# ufw disable
Firewall stopped and disabled on system startup
root@ip-172-31-9-181:~# ufw status
Status: inactive
root@ip-172-31-9-181:~# swapoff -a
root@ip-172-31-9-181:~# sed -i '/swap/d' /etc/fstab
root@ip-172-31-9-181:~# cat >>/etc/sysctl.d/kubernetes.conf<<EOF
> net.bridge.bridge-nf-call-ip6tables = 1
> net.bridge.bridge-nf-call-iptables = 1
> EOF
root@ip-172-31-9-181:~# sysctl --system
====to install docker====
root@ip-172-31-9-181:~#   apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
root@ip-172-31-9-181:~#   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
root@ip-172-31-9-181:~#   add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
root@ip-172-31-9-181:~#   apt update
root@ip-172-31-9-181:~#   apt install -y docker-ce=5:19.03.10~3-0~ubuntu-focal containerd.io
   ===to install k8s components===
root@ip-172-31-9-181:~#   curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
OK
root@ip-172-31-9-181:~#   echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
root@ip-172-31-9-181:~# apt update && apt install -y kubeadm=1.18.5-00 kubelet=1.18.5-00 kubectl=1.18.5-00
root@ip-172-31-9-181:~# apt update 

upto this all commads should be run on master as well as worker nodes

===the foolowing command should be run on k8s master only===
root@ip-172-31-9-181:~# kubeadm init --apiserver-advertise-address=172.31.9.181 --pod-network-cidr=192.168.0.0/16  --ignore-preflight-errors=all
root@ip-172-31-9-181:~# logout
===the following  3 commands should be run as a non root user===
ubuntu@ip-172-31-9-181:~$  mkdir -p $HOME/.kube
ubuntu@ip-172-31-9-181:~$  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
ubuntu@ip-172-31-9-181:~$  sudo chown $(id -u):$(id -g) $HOME/.kube/config
====
ubuntu@ip-172-31-9-181:~$ sudo su -
root@ip-172-31-9-181:~# kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml
root@ip-172-31-9-181:~# kubeadm token create --print-join-command
kubeadm join 172.31.9.181:6443 --token x98dq5.no3j7reyfum691vz     --discovery-token-ca-cert-hash sha256:7017cc21350841c0188a8b99fc115a076e0ea4e680255a51552a1c0fe556b05b 

====on worker node ===
copy the output of the above command in the master machine and paste in the worker machine

root@ip-172-32-89-54:~# kubeadm join 172.31.9.181:6443 --token x98dq5.no3j7reyfum691vz     --discovery-token-ca-cert-hash sha256:7017cc21350841c0188a8b99fc115a076e0ea4e680255a51552a1c0fe556b05b 

===on management server =====
root@ip-172-35-65-123:~# which kubectl
/usr/local/bin/kubectl     ===if you not find the kubectl binary download and extract it===
root@ip-172-35-65-123:~# mkdir ~/.kube
root@ip-172-35-65-123:~# scp  root@172.31.9.181:/etc/kubernetes/admin.conf ~/.kube/config
===by using the above command we are copying the configuration from the master server to the management server ====
===from now onwords beeing in the management server we can control the cluster ===
===we can run all the k8s commands beeing in the management server itself=== 

root@ip-172-35-65-123:~# kubectl get nodes
root@ip-172-35-65-123:~# kubectl version --short
root@ip-172-35-65-123:~# kubectl create deploy nginx --image nginx
root@ip-172-35-65-123:~# kubectl get all
root@ip-172-35-65-123:~# kubectl expose deploy nginx --port 80 --type NodePort 
root@ip-172-35-65-123:~# kubectl get svc 
root@ip-172-35-65-123:~# kubectl get all


=====now open the browser http://172.32.89.54:30644  we can access the nginx webpage ===




